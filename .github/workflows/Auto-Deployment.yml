name: Auto Deploy to AWS EC2 on Push to Main

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    name: Build Docker Images and Push to Docker Hub
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image for frontend
        run: |
          docker build -f frontend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }} .
      
      - name: Build Docker image for backend
        run: |
          docker build -f backend/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }} .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image for frontend
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}
      
      - name: Push Docker image for backend
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy to AWS EC2
    needs: build-and-push
    steps:
      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: SSH into EC2 instance and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          script: |
            # Stop existing containers
            docker stop frontend backend || true
            docker rm frontend backend || true

            # Pull the latest Docker images from Docker Hub
            docker pull ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}
            docker pull ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

            # Run the frontend container (make sure to expose the correct ports)
            docker run -d --name frontend -p 80:80 ${{ secrets.DOCKER_USERNAME }}/frontend:${{ github.sha }}

            # Run the backend container (make sure to expose the correct ports)
            docker run -d --name backend -p 3000:3000 ${{ secrets.DOCKER_USERNAME }}/backend:${{ github.sha }}

            echo "Deployment successful!"
